name: Build & Publish buylist

on:
  workflow_dispatch: {}         # 手動実行ボタン
  schedule:
    - cron: '*/15 * * * *'      # 15分おき（必要に応じて調整）

permissions:
  contents: write               # docs/ へのコミットに必要

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install pandas openpyxl pillow requests

      # === データ取得：3パターンのどれかを使う ===
      # A) 直接CSV/ExcelをダウンロードできるURLがある場合（認証トークン付きも可）
      - name: Fetch buylist file (CSV/Excel)
        if: env.POS_FILE_URL != ''
        env:
          POS_FILE_URL: ${{ secrets.POS_FILE_URL }}         # 例: https://pos.mycalinks.com/api/export/buylist.xlsx?token=...
          POS_HEADER:   ${{ secrets.POS_AUTH_HEADER }}      # 例: Authorization: Bearer xxxxx (不要なら空でOK)
        run: |
          mkdir -p data
          if [ -n "$POS_HEADER" ]; then
            curl -L -H "$POS_HEADER" "$POS_FILE_URL" -o data/buylist.xlsx || curl -L -H "$POS_HEADER" "$POS_FILE_URL" -o buylist.xlsx
          else
            curl -L "$POS_FILE_URL" -o data/buylist.xlsx || curl -L "$POS_FILE_URL" -o buylist.xlsx
          fi
          ls -l data || true
          ls -l || true

      # B) ログインが必要で“APIが無い”場合のテンプレ（Playwrightでエクスポートをクリック）
      # ※ CAPTCHA があると自動化は不可。なければいけます。
      - name: (Optional) Headless login & export with Playwright
        if: false   # ← 使うとき true に。Playwrightスクリプトを用意する
        run: |
          pip install playwright
          python - <<'PY'
          # ここに pos.mycalinks.com へログインしてCSV/Excelをダウンロードする処理を記述
          # 例: playwright でフォームに ID/PW 入力 → エクスポートボタン → ダウンロード保存
          PY

      # C) すでにリポジトリに buylist.xlsx/buylist.csv を置いて手動更新する運用なら何もしない

      - name: Build static pages (gen_buylist.py)
        env:
          OUT_DIR: docs
          PER_PAGE: "80"
          BUILD_THUMBS: "0"
        run: |
          # 優先順: data/buylist.xlsx -> buylist.xlsx -> data/buylist.csv -> buylist.csv
          python gen_buylist.py "${EXCEL_PATH:-data/buylist.xlsx}" || \
          python gen_buylist.py "${EXCEL_PATH:-buylist.xlsx}" || \
          python gen_buylist.py "${EXCEL_PATH:-data/buylist.csv}" || \
          python gen_buylist.py "${EXCEL_PATH:-buylist.csv}"

      - name: Commit & push docs
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs
          git diff --cached --quiet || git commit -m "update buylist (auto)"
          git push
