Option Explicit

' ===== 設定 =====
Const HEADER_ROWS As Long = 1
Const SHEET1_NAME As String = "シート1"
Const SHEET2_NAME As String = "シート2"

Public Sub AlignSheet1ToSheet2_BlankForMissing_SafeV2()
    On Error GoTo EH

    Dim sh1 As Worksheet, sh2 As Worksheet
    Set sh1 = ResolveSheet(Array(SHEET1_NAME, "Sheet1", "Sheet 1"))
    Set sh2 = ResolveSheet(Array(SHEET2_NAME, "Sheet2", "Sheet 2"))
    If sh1 Is Nothing Or sh2 Is Nothing Then
        MsgBox "対象シートが見つかりません。SHEET1_NAME / SHEET2_NAME を確認してください。", vbExclamation
        Exit Sub
    End If

    Dim lastRow1 As Long, lastCol1 As Long, lastRow2 As Long
    lastRow1 = LastRowUsed(sh1)
    lastCol1 = LastColUsed(sh1)
    lastRow2 = LastRowUsed(sh2)

    If lastRow2 <= HEADER_ROWS Then
        MsgBox "シート2のA列にデータ行がありません。", vbExclamation
        Exit Sub
    End If
    If lastCol1 = 0 Then lastCol1 = 1  ' 列が空でも最低1列扱いに

    ' --- 参照順（シート2のA列）を常に2次元配列に ---
    Dim orderIds As Variant
    orderIds = To2D(sh2.Range(sh2.Cells(HEADER_ROWS + 1, 1), sh2.Cells(lastRow2, 1)).Value)
    Dim orderRows As Long: orderRows = UBound(orderIds, 1)

    ' --- シート1のデータ読み取り（ヘッダー以降） ---
    Dim data1 As Variant, dataRows As Long
    If lastRow1 > HEADER_ROWS Then
        data1 = To2D(sh1.Range(sh1.Cells(HEADER_ROWS + 1, 1), sh1.Cells(lastRow1, lastCol1)).Value)
        dataRows = UBound(data1, 1)
    Else
        dataRows = 0
    End If

    ' --- ID -> 行(複数) の辞書（A列キー） ---
    Dim dict As Object: Set dict = CreateObject("Scripting.Dictionary")
    Dim r As Long, c As Long
    If dataRows > 0 Then
        For r = 1 To dataRows
            Dim id As String
            id = Trim$(CStr(data1(r, 1)))
            If Len(id) > 0 Then
                If Not dict.Exists(id) Then dict.Add id, New Collection
                Dim rowArr() As Variant
                ReDim rowArr(1 To lastCol1)
                For c = 1 To lastCol1
                    rowArr(c) = data1(r, c)
                Next
                dict(id).Add rowArr
            End If
        Next r
    End If

    ' --- 出力配列（シート2の行数ぶん確保） ---
    Dim outArr() As Variant
    ReDim outArr(1 To orderRows, 1 To lastCol1)

    Dim outR As Long: outR = 0
    For r = 1 To orderRows
        outR = outR + 1
        Dim key As String: key = Trim$(CStr(orderIds(r, 1)))

        If Len(key) > 0 And dict.Exists(key) Then
            If dict(key).Count > 0 Then
                Dim tmp As Variant
                tmp = dict(key)(1) ' ← Collectionの先頭(Variant配列)。Setは使わない
                For c = 1 To lastCol1
                    outArr(outR, c) = tmp(c)
                Next
                dict(key).Remove 1
            Else
                ' そのIDはあるが行は使い切り → 空行
                For c = 1 To lastCol1
                    outArr(outR, c) = vbNullString
                Next
            End If
        Else
            ' シート1に無いID → 空行
            For c = 1 To lastCol1
                outArr(outR, c) = vbNullString
            Next
        End If
    Next r

    ' --- 既存データ部をクリアして書き戻し ---
    If lastRow1 > HEADER_ROWS And lastCol1 > 0 Then
        sh1.Range(sh1.Cells(HEADER_ROWS + 1, 1), sh1.Cells(lastRow1, lastCol1)).ClearContents
    End If
    sh1.Range(sh1.Cells(HEADER_ROWS + 1, 1), sh1.Cells(HEADER_ROWS + orderRows, lastCol1)).Value = outArr

    ' --- 余分な旧データ行を削除 ---
    Dim newLast As Long: newLast = HEADER_ROWS + orderRows
    Dim nowLast As Long: nowLast = LastRowUsed(sh1)
    If nowLast > newLast Then
        sh1.Rows((newLast + 1) & ":" & nowLast).EntireRow.Delete
    End If

    MsgBox "完了：シート2の順序に合わせ、欠け分は空白行を追加・余分は削除しました。", vbInformation
    Exit Sub

EH:
    MsgBox "エラー発生: " & Err.Number & " - " & Err.Description, vbCritical
End Sub

' ===== ユーティリティ =====

' どの候補名でも合致したシートを返す（無ければ Nothing）
Private Function ResolveSheet(candidates As Variant) As Worksheet
    Dim wb As Workbook: Set wb = ThisWorkbook
    Dim nm As Variant, ws As Worksheet
    For Each nm In candidates
        On Error Resume Next
        Set ws = wb.Worksheets(CStr(nm))
        On Error GoTo 0
        If Not ws Is Nothing Then Set ResolveSheet = ws: Exit Function
    Next nm
End Function

' 使用済み最終行
Private Function LastRowUsed(sh As Worksheet) As Long
    Dim f As Range
    On Error Resume Next
    Set f = sh.Cells.Find(What:="*", LookIn:=xlFormulas, _
                          SearchOrder:=xlByRows, SearchDirection:=xlPrevious)
    On Error GoTo 0
    If f Is Nothing Then LastRowUsed = 0 Else LastRowUsed = f.Row
End Function

' 使用済み最終列
Private Function LastColUsed(sh As Worksheet) As Long
    Dim f As Range
    On Error Resume Next
    Set f = sh.Cells.Find(What:="*", LookIn:=xlFormulas, _
                          SearchOrder:=xlByColumns, SearchDirection:=xlPrevious)
    On Error GoTo 0
    If f Is Nothing Then LastColUsed = 0 Else LastColUsed = f.Column
End Function

' 単一セルでも必ず (1..r, 1..c) の2次元配列にする
Private Function To2D(v As Variant) As Variant
    If IsArray(v) Then
        To2D = v
    Else
        Dim a() As Variant
        ReDim a(1 To 1, 1 To 1)
        a(1, 1) = v
        To2D = a
    End If
End Function
